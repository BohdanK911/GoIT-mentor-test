{"version":3,"sources":["components/RepoCard/RepoCard.module.css","components/Input/Input.module.css","components/Loader/Loader.module.css","components/Pagination/Pagination.module.css","api/index.js","store/githubSlice.js","store/index.js","components/Input/Input.js","components/icons/PersonIcon/PersonIcon.js","components/icons/ReactIcon/ReactIcon.js","components/icons/StarIcon/StarIcon.js","components/RepoCard/RepoCard.js","components/Loader/Loader.js","components/Pagination/Pagination.js","helpers/debounce.js","app/App.js","serviceWorker.js","index.js","app/App.module.css"],"names":["module","exports","githubApiRequest","axios","create","baseURL","process","githubApi","getRepos","searchString","page","a","get","params","q","per_page","createAsyncThunk","searchQuery","thunkAPI","search","response","data","githubSlice","createSlice","name","initialState","isLoading","githubData","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","store","configureStore","reducer","github","githubReducer","Input","ref","autoComplete","isDisabled","props","className","styles","input","disabled","maxLength","forwardRef","PersonIcon","fill","xmlns","viewBox","d","ReactIcon","StarIcon","RepoCard","author","language","description","starsCount","watchersCount","repoCardContainer","repoCardImageWrapper","repoCardImage","repoCardDetails","title","repoCardName","repoCardPlainText","repoCardDescription","repoCardStats","repoCardStatsItem","repoCardStatsItemIconWrapper","repoCardStarIcon","repoCardStrongText","repoCardPersonIcon","suffixArr","Loader","useState","suffixIndex","setSuffixIndex","useEffect","intervalId0","intervalId1","intervalId2","intervalId3","setInterval","timeout0","setTimeout","timeout1","timeout2","clearTimeout","clearInterval","loader","Pagination","pageRangeDisplayed","marginPagesDisplayed","containerClassName","pagination","pageClassName","paginationItem","pageLinkClassName","paginationItemLink","breakClassName","activeClassName","paginationItemActive","disabledClassName","paginationButtonDisabled","previousLabel","previousClassName","paginationButton","nextLabel","nextClassName","initialPage","disableInitialCallback","debounce","callback","timeoutId","delay","args","App","inputValue","setInputValue","setPage","useSelector","githubSearchData","dispatch","useDispatch","inputRef","useRef","debounedInputChangeHandler","useCallback","current","focus","appContainer","header","placeholder","value","onChange","target","mainWrapper","reposWrapper","items","map","repo","owner","login","stargazers_count","watchers_count","full_name","total_count","pageCount","Math","ceil","forcePage","onPageChange","selected","noReposText","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c9947ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"repoCardContainer\":\"RepoCard_repoCardContainer__18bpL\",\"repoCardImageWrapper\":\"RepoCard_repoCardImageWrapper__TCvUB\",\"repoCardImage\":\"RepoCard_repoCardImage__evw_3\",\"repoCardDetails\":\"RepoCard_repoCardDetails__lUolF\",\"repoCardStats\":\"RepoCard_repoCardStats__6OYZS RepoCard_repoCardDetails__lUolF\",\"repoCardName\":\"RepoCard_repoCardName__2Wn0S\",\"repoCardPlainText\":\"RepoCard_repoCardPlainText__3sgMf\",\"repoCardStrongText\":\"RepoCard_repoCardStrongText__2bJfb\",\"repoCardDescription\":\"RepoCard_repoCardDescription__1psSq RepoCard_repoCardPlainText__3sgMf\",\"repoCardStarIcon\":\"RepoCard_repoCardStarIcon__282JR\",\"repoCardPersonIcon\":\"RepoCard_repoCardPersonIcon__1GV7V\",\"repoCardStatsItem\":\"RepoCard_repoCardStatsItem__3x5ev\",\"repoCardStatsItemIconWrapper\":\"RepoCard_repoCardStatsItemIconWrapper__qNHh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3PNbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1j2Bs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2plzt\",\"paginationButton\":\"Pagination_paginationButton__V47iz\",\"paginationButtonDisabled\":\"Pagination_paginationButtonDisabled__3xPSc Pagination_paginationButton__V47iz\",\"paginationItem\":\"Pagination_paginationItem__PU1Qg\",\"paginationItemActive\":\"Pagination_paginationItemActive__3dYUi Pagination_paginationItem__PU1Qg\",\"paginationItemLink\":\"Pagination_paginationItemLink__1Ci5H\"};","import axios from 'axios';\n\nexport const GITHUB_API_REPOS_PER_PAGE = 20;\n\nconst baseURL = process.env.REACT_APP_API_URL;\nconst githubApiRequest = axios.create({ baseURL });\n\nconst githubApi = {\n  getRepos: async (searchString, page) =>\n    await githubApiRequest.get('/search/repositories', {\n      params: {\n        q: searchString || 'react',\n        per_page: GITHUB_API_REPOS_PER_PAGE,\n        page: page || 1\n      }\n    })\n};\n\nexport default githubApi;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport githubApi from 'api';\n\nconst initialState = {\n  isLoading: false,\n  githubData: null\n};\n\nexport const getRepos = createAsyncThunk('github/getRepos', async (searchQuery, thunkAPI) => {\n  const response = await githubApi.getRepos(searchQuery.search, searchQuery.page);\n\n  return response.data;\n});\n\nexport const githubSlice = createSlice({\n  name: 'github',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getRepos.pending, state => {\n      state.isLoading = true;\n    });\n\n    builder.addCase(getRepos.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.githubData = action.payload;\n    });\n\n    builder.addCase(getRepos.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n  }\n});\n\nexport default githubSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport githubReducer from './githubSlice';\n\nexport const store = configureStore({\n  reducer: {\n    github: githubReducer\n  }\n});\n","import { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Input.module.css';\n\nconst Input = ({ autoComplete, isDisabled, ...props }, ref) => (\n  <input\n    className={styles.input}\n    ref={ref}\n    disabled={isDisabled}\n    autoComplete={autoComplete || 'off'} // 'off' need to be here because forwardRef is not support defaultProps\n    maxLength={256}\n    {...props}\n  />\n);\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  autoComplete: PropTypes.string,\n  isDisabled: PropTypes.bool\n};\n\nexport default forwardRef(Input);\n","import PropTypes from 'prop-types';\n\nconst PersonIcon = ({ fill = '#6e798c', className }) => (\n  <svg xmlns={'http://www.w3.org/2000/svg'} fill={'none'} viewBox={'0 0 24 24'} className={className}>\n    <defs />\n    <path\n      fill={fill}\n      d={\n        'M11.96 13.82a6.3 6.3 0 006.42-6.17c0-3.41-2.87-6.16-6.42-6.16a6.3 6.3 0 00-6.42 6.16 6.31 6.31 0 006.42 6.17zm0-10.72c2.6 0 4.73 2.05 4.73 4.55s-2.13 4.54-4.73 4.54a4.65 4.65 0 01-4.73-4.54c0-2.5 2.13-4.55 4.73-4.55zM.85 23.45h22.3c.48 0 .85-.36.85-.81 0-4.26-3.6-7.74-8.06-7.74H8.06C3.63 14.9 0 18.36 0 22.64c0 .45.37.81.85.81zm7.2-6.93h7.9c3.22 0 5.88 2.31 6.3 5.3H1.75a6.3 6.3 0 016.3-5.3z'\n      }\n    />\n  </svg>\n);\n\nPersonIcon.propTypes = {\n  fill: PropTypes.string\n};\n\nexport default PersonIcon;\n","import PropTypes from 'prop-types';\n\nconst ReactIcon = ({ fill = '#fff', className }) => (\n  <svg xmlns={'http://www.w3.org/2000/svg'} fill={'none'} viewBox={'0 0 80 80'} className={className}>\n    <path fill={fill} d={'M39.934 46.64a6.693 6.693 0 100-13.387 6.693 6.693 0 000 13.387z'} />\n    <path\n      fill={fill}\n      d={\n        'M39.933 55.28c-9.4 0-17.613-1.107-23.76-3.213-3.986-1.36-7.373-3.174-9.786-5.24-2.56-2.187-3.92-4.574-3.92-6.88 0-4.427 4.853-8.76 13-11.587 6.666-2.32 15.36-3.613 24.453-3.613 8.933 0 17.507 1.253 24.133 3.546 3.88 1.334 7.147 3.067 9.467 4.987 2.52 2.107 3.853 4.413 3.853 6.667 0 4.6-5.426 9.253-14.173 12.146-6.187 2.054-14.453 3.187-23.267 3.187zm0-27.333c-8.626 0-17.16 1.253-23.4 3.426C9.04 33.987 5.68 37.56 5.68 39.947c0 2.48 3.613 6.386 11.533 9.093 5.814 1.987 13.68 3.04 22.72 3.04 8.48 0 16.387-1.067 22.267-3.027 8.227-2.733 11.987-6.64 11.987-9.106 0-1.267-.96-2.76-2.707-4.214-2.013-1.68-4.947-3.213-8.453-4.426-6.307-2.16-14.507-3.36-23.094-3.36z'\n      }\n    />\n    <path\n      fill={fill}\n      d={\n        'M24.747 73.307c-1.36 0-2.56-.294-3.574-.88-3.826-2.214-5.16-8.587-3.546-17.054 1.32-6.946 4.546-15.106 9.093-22.986 4.467-7.734 9.827-14.534 15.12-19.134 3.093-2.693 6.227-4.666 9.053-5.706 3.08-1.134 5.747-1.134 7.694-.014 3.986 2.294 5.306 9.334 3.44 18.347-1.32 6.4-4.467 14.12-8.867 21.76-4.693 8.133-9.76 14.693-14.653 18.973-3.174 2.774-6.44 4.8-9.427 5.854-1.56.56-3.027.84-4.333.84zm3.346-40.12l1.387.8c-4.307 7.466-7.493 15.48-8.72 21.986-1.48 7.8-.053 12.494 2 13.68.507.294 1.173.454 1.987.454 2.653 0 6.826-1.68 11.653-5.894 4.627-4.04 9.467-10.333 13.987-18.16 4.24-7.346 7.253-14.733 8.506-20.8 1.747-8.493.24-13.693-1.906-14.933-1.094-.627-2.867-.547-5 .24-2.467.907-5.254 2.68-8.054 5.12C38.907 20.053 33.773 26.56 29.48 34l-1.387-.813z'\n      }\n    />\n    <path\n      fill={fill}\n      d={\n        'M55.12 73.347c-3.627 0-8.226-2.187-13.026-6.32-5.36-4.614-10.814-11.48-15.374-19.36-4.48-7.734-7.68-15.774-9.026-22.667-.787-4.027-.934-7.72-.427-10.693.56-3.24 1.88-5.547 3.84-6.68 3.973-2.307 10.733.066 17.613 6.186 4.88 4.334 10 10.92 14.413 18.547 4.707 8.133 7.867 15.8 9.12 22.173.814 4.134.947 7.974.374 11.094-.614 3.32-2 5.68-4 6.84-1 .586-2.187.88-3.507.88zm-25.626-27.28c4.32 7.466 9.68 14.226 14.693 18.533 6.013 5.173 10.787 6.293 12.853 5.093 2.147-1.24 3.72-6.32 2.093-14.533-1.2-6.027-4.226-13.36-8.76-21.187-4.253-7.346-9.146-13.653-13.773-17.76-6.48-5.76-11.733-7.053-13.88-5.813-1.093.627-1.906 2.213-2.293 4.453-.44 2.587-.307 5.894.413 9.534 1.28 6.546 4.347 14.24 8.654 21.68z'\n      }\n    />\n  </svg>\n);\n\nReactIcon.propTypes = {\n  fill: PropTypes.string\n};\n\nexport default ReactIcon;\n","import PropTypes from 'prop-types';\n\nconst StarIcon = ({ fill = '#ffc22b', className }) => (\n  <svg xmlns={'http://www.w3.org/2000/svg'} fill={'none'} viewBox={'0 0 29 30'} className={className}>\n    <path\n      fill={fill}\n      d={\n        'M27.4 10.23l-7.88-.82c-.5-.05-.93-.4-1.13-.93L15.56.93a1.31 1.31 0 00-2.51 0l-2.8 7.55c-.19.53-.64.88-1.13.93l-7.9.82c-1.17.12-1.65 1.74-.76 2.61L6.4 18.6c.39.37.54.92.43 1.47l-1.78 8.07c-.28 1.27.97 2.32 2 1.65l6.59-4.26c.43-.28.95-.28 1.38 0l6.58 4.26c1.04.67 2.28-.35 2-1.65l-1.76-8.07c-.1-.55.05-1.1.43-1.47l5.95-5.76c.86-.87.36-2.49-.81-2.61z'\n      }\n    />\n  </svg>\n);\n\nStarIcon.propTypes = {\n  fill: PropTypes.string\n};\n\nexport default StarIcon;\n","import PropTypes from 'prop-types';\nimport { PersonIcon, ReactIcon, StarIcon } from 'components/icons';\nimport styles from './RepoCard.module.css';\n\nconst RepoCard = ({ name, author, language, description, starsCount, watchersCount }) => (\n  <div className={styles.repoCardContainer}>\n    <div className={styles.repoCardImageWrapper}>\n      <ReactIcon className={styles.repoCardImage} />\n    </div>\n\n    <div className={styles.repoCardDetails}>\n      <h3 title={'Repository name'} className={styles.repoCardName}>\n        {name}\n      </h3>\n\n      <p title={'Author'} className={styles.repoCardPlainText}>\n        {author}\n      </p>\n\n      {language && (\n        <p title={'Most used language'} className={styles.repoCardPlainText}>\n          {language}\n        </p>\n      )}\n\n      {description && (\n        <p title={'Repository description'} className={styles.repoCardDescription}>\n          {description}\n        </p>\n      )}\n    </div>\n\n    <div className={styles.repoCardStats}>\n      <div className={styles.repoCardStatsItem}>\n        <div className={styles.repoCardStatsItemIconWrapper}>\n          <StarIcon className={styles.repoCardStarIcon} />\n        </div>\n\n        <p className={styles.repoCardPlainText}>\n          <span className={styles.repoCardStrongText}>{starsCount}</span> stars\n        </p>\n      </div>\n\n      <div className={styles.repoCardStatsItem}>\n        <div className={styles.repoCardStatsItemIconWrapper}>\n          <PersonIcon className={styles.repoCardPersonIcon} />\n        </div>\n\n        <p className={styles.repoCardPlainText}>\n          <span className={styles.repoCardStrongText}>{watchersCount} watchers</span>\n        </p>\n      </div>\n    </div>\n  </div>\n);\n\nRepoCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  language: PropTypes.string,\n  description: PropTypes.string,\n  starsCount: PropTypes.number.isRequired,\n  watchersCount: PropTypes.number.isRequired\n};\n\nexport default RepoCard;\n","import { useEffect, useState } from 'react';\nimport styles from './Loader.module.css';\n\nconst suffixArr = ['.', '..', '...'];\n\nconst Loader = () => {\n  const [suffixIndex, setSuffixIndex] = useState(null);\n\n  useEffect(() => {\n    let intervalId0, intervalId1, intervalId2, intervalId3;\n\n    intervalId0 = setInterval(() => setSuffixIndex(0), 1000);\n    const timeout0 = setTimeout(() => (intervalId1 = setInterval(() => setSuffixIndex(1), 1000)), 250);\n    const timeout1 = setTimeout(() => (intervalId2 = setInterval(() => setSuffixIndex(2), 1000)), 500);\n    const timeout2 = setTimeout(() => (intervalId3 = setInterval(() => setSuffixIndex(null), 1000)), 750);\n\n    return () => {\n      clearTimeout(timeout0);\n      clearTimeout(timeout1);\n      clearTimeout(timeout2);\n      clearInterval(intervalId0);\n      clearInterval(intervalId1);\n      clearInterval(intervalId2);\n      clearInterval(intervalId3);\n    };\n  }, []);\n\n  return <p className={styles.loader}>Loading{suffixArr[suffixIndex]}</p>;\n};\n\nexport default Loader;\n","import PropTypes from 'prop-types';\nimport ReactPaginate from 'react-paginate';\nimport styles from './Pagination.module.css';\n\nconst Pagination = ({ pageRangeDisplayed = 6, marginPagesDisplayed = 1, ...props }) => (\n  <ReactPaginate\n    pageRangeDisplayed={pageRangeDisplayed}\n    marginPagesDisplayed={marginPagesDisplayed}\n    containerClassName={styles.pagination}\n    pageClassName={styles.paginationItem}\n    pageLinkClassName={styles.paginationItemLink}\n    breakClassName={styles.paginationItem}\n    activeClassName={styles.paginationItemActive}\n    disabledClassName={styles.paginationButtonDisabled}\n    previousLabel={'Previous'}\n    previousClassName={styles.paginationButton}\n    nextLabel={'Next'}\n    nextClassName={styles.paginationButton}\n    initialPage={0}\n    disableInitialCallback\n    {...props}\n  />\n);\n\nPagination.propTypes = {\n  pageCount: PropTypes.number.isRequired,\n  pageRangeDisplayed: PropTypes.number,\n  marginPagesDisplayed: PropTypes.number,\n  forcePage: PropTypes.number,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","const debounce = (callback, delay = 400) => {\n  let timeoutId;\n\n  return (...args) => {\n    clearTimeout(timeoutId);\n\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n\n      callback(...args);\n    }, delay);\n  };\n};\n\nexport default debounce;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GITHUB_API_REPOS_PER_PAGE } from 'api';\nimport Input from 'components/Input';\nimport RepoCard from 'components/RepoCard';\nimport Loader from 'components/Loader';\nimport Pagination from 'components/Pagination';\nimport { getRepos } from 'store/githubSlice';\nimport debounce from 'helpers/debounce';\nimport styles from './App.module.css';\n\nconst App = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [page, setPage] = useState(null);\n  const isLoading = useSelector(state => state.github.isLoading);\n  const githubSearchData = useSelector(state => state.github.githubData);\n  const dispatch = useDispatch();\n  const inputRef = useRef(null);\n  const debounedInputChangeHandler = useCallback(\n    debounce(search => {\n      setPage(0);\n      dispatch(getRepos({ search }));\n    }, 800),\n    []\n  );\n\n  const handleInputChange = ({ target }) => setInputValue(target.value);\n  const handlePageChange = ({ selected }) => {\n    setPage(selected);\n\n    dispatch(getRepos({ search: inputValue, page: selected + 1 }));\n  };\n\n  useEffect(() => {\n    if (inputRef?.current) inputRef.current.focus();\n  }, [isLoading]);\n\n  useEffect(() => {\n    debounedInputChangeHandler(inputValue);\n  }, [inputValue]);\n\n  return (\n    <div className={styles.appContainer}>\n      <header className={styles.header}>\n        <Input\n          name={'search'}\n          placeholder={'Search'}\n          value={inputValue}\n          ref={inputRef}\n          onChange={handleInputChange}\n          isDisabled={isLoading}\n        />\n      </header>\n\n      {!isLoading && githubSearchData ? (\n        <main className={styles.mainWrapper}>\n          <div className={styles.reposWrapper}>\n            {githubSearchData.items.map(repo => (\n              <RepoCard\n                key={repo.full_name}\n                name={repo.name}\n                author={repo.owner.login}\n                language={repo.language}\n                description={repo.description}\n                starsCount={repo.stargazers_count}\n                watchersCount={repo.watchers_count}\n              />\n            ))}\n          </div>\n\n          {githubSearchData.total_count ? (\n            <Pagination\n              pageCount={Math.ceil(githubSearchData.total_count / GITHUB_API_REPOS_PER_PAGE)}\n              forcePage={page}\n              onPageChange={handlePageChange}\n            />\n          ) : (\n            <p className={styles.noReposText}>​По Вашому запиту не знайдено жодного репозиторія</p>\n          )}\n        </main>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from 'store';\nimport App from 'app/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport '@fontsource/roboto';\nimport '@fontsource/dm-serif-display';\nimport '@fontsource/open-sans';\nimport '@fontsource/archivo';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"App_appContainer__2doSu\",\"header\":\"App_header__ooUVu\",\"mainWrapper\":\"App_mainWrapper__3AHot\",\"reposWrapper\":\"App_reposWrapper__19MYV App_mainWrapper__3AHot\",\"noReposText\":\"App_noReposText__2-7f1\"};"],"sourceRoot":""}